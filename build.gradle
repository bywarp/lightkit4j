/*
 * Copyright (c) 2020 Warp Studios
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.0'
    id 'maven-publish'
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

version '0.1.5'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }

    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
    extraLibs
}

dependencies {
    compile group: 'org.json', name: 'json', version: '20180130'
    compile group: 'com.konghq', name: 'unirest-java', version: '3.9.00'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.0'
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.6.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.6.2'

    configurations.compile.extendsFrom(configurations.extraLibs)
}

shadowJar {
    if (System.getenv("CI") == null || System.getenv("CI").toLowerCase() != 'true') {
        destinationDir = file(melonExportTarget)
    }

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    classifier = null

    manifest {
        attributes 'Main-Class': 'co.bywarp.lightkit.Lightkit'
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            groupId = "co.bywarp"
            artifactId = "lightkit"
            project.shadow.component(publication)
        }
    }

    repositories {
        maven {
            url "https://maven.pkg.github.com/bywarp/lightkit4j"
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}

test {
    useJUnitPlatform()
}